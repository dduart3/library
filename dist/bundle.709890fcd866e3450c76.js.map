{"version":3,"sources":["webpack:///./src/script.js"],"names":["$form","document","querySelector","$bookContainer","getStorage","JSON","parse","localStorage","getItem","setStorage","array","setItem","stringify","myLibrary","Array","from","Book","id","title","author","pages","read","this","BookOptionsModal","$bookOptionsModal","createElement","$bookOptionsModalTitle","$bookOptionsModalButtons","$bookOptionsModalButtonsReadStatus","$bookOptionsModalButtonsDelete","$bookOptionsModalButtonsCancel","classList","add","textContent","appendChild","body","createHtmlBook","book","isReadValueTrue","setReadContentValue","$book","$bookCover","$bookCoverTitle","$bookCoverAuthor","$bookCoverPages","$bookCoverRead","setAttribute","addEventListener","e","preventDefault","getAttribute","bookStorageValue","bookOptionsModal","replace","remove","splice","submitEvent","length","target","value","checked","stringBook","parsedBook","push","addBookToLibrary","reset","map"],"mappings":"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","file":"bundle.709890fcd866e3450c76.js","sourcesContent":["import './style.css';\nconst $form = document.querySelector('.form');\nconst $bookContainer = document.querySelector('.books-container__content');\n\nconst getStorage = JSON.parse(localStorage.getItem('library'));\n\nconst setStorage = (array)=>{\n  localStorage.setItem('library', JSON.stringify(array));\n}\n\nconst myLibrary = (getStorage) ? Array.from(getStorage) : [];\n\n\nconst addBookToLibrary = (book) =>{\n  const stringBook = JSON.stringify(book)\n  const parsedBook = JSON.parse(stringBook);\n  \n  myLibrary.push(parsedBook);\n  setStorage(myLibrary);\n}\n\n\nfunction Book(id, title,author, pages, read) {\n\n  this.id = id;\n  this.title = title;\n  this.author = author;\n  this.pages = pages;\n  this.read = read;  \n}\n\n\nfunction BookOptionsModal(){\n\n  this.$bookOptionsModal = document.createElement('div');\n  this.$bookOptionsModalTitle = document.createElement('p');\n  this.$bookOptionsModalButtons = document.createElement('div');\n  this.$bookOptionsModalButtonsReadStatus = document.createElement('button');\n  this.$bookOptionsModalButtonsDelete = document.createElement('button');\n  this.$bookOptionsModalButtonsCancel = document.createElement('button');\n  \n  \n  this.$bookOptionsModal.classList.add('book-options-modal');\n  this.$bookOptionsModalTitle.classList.add('book-options-modal__title');\n  this.$bookOptionsModalButtons.classList.add('book-options-modal__buttons');\n  this.$bookOptionsModalButtonsReadStatus.classList.add('book-options-modal__buttons__read-status');\n  this.$bookOptionsModalButtonsDelete.classList.add('book-options-modal__buttons__delete');\n  this.$bookOptionsModalButtonsCancel.classList.add('book-options-modal__buttons__cancel');\n  \n  \n  \n  this.$bookOptionsModalTitle.textContent ='What do you wanna do?';\n  this.$bookOptionsModalButtonsReadStatus.textContent = 'Change Read Status';\n  this.$bookOptionsModalButtonsDelete.textContent = 'Delete';\n  this.$bookOptionsModalButtonsCancel.textContent = 'Cancel';\n  \n  \n  \n  this.$bookOptionsModalButtons.appendChild(this.$bookOptionsModalButtonsReadStatus);\n  this.$bookOptionsModalButtons.appendChild(this.$bookOptionsModalButtonsDelete);\n  \n  \n  this.$bookOptionsModal.appendChild(this.$bookOptionsModalTitle);\n  this.$bookOptionsModal.appendChild(this.$bookOptionsModalButtons);\n  this.$bookOptionsModal.appendChild(this.$bookOptionsModalButtonsCancel);\n  \n  \n  document.body.appendChild(this.$bookOptionsModal);\n}\n\n\nfunction createHtmlBook(book){\n\n  const isReadValueTrue = () =>{\n    return (book.read === true) ? true : false;\n  }\n  \n  const setReadContentValue = () => {\n    return (isReadValueTrue()) ? \"Read\" : \"Not read\";    \n  }\n\n  const setReadClass = () => {\n    (isReadValueTrue()) ? $bookCoverRead.classList.add('read') :  $bookCoverRead.classList.add('not-read')\n  }\n\n  \n  const $book = document.createElement('div');\n  const $bookCover = document.createElement('div');\n  const $bookCoverTitle = document.createElement('p');\n  const $bookCoverAuthor = document.createElement('p');\n  const $bookCoverPages = document.createElement('p');\n  const $bookCoverRead = document.createElement('p');\n\n  $book.setAttribute('id', book.id);\n\n  $book.classList.add('book');\n  $bookCover.classList.add('book__cover');\n  $bookCoverTitle.classList.add('book__cover__title');\n  $bookCoverAuthor.classList.add('book__cover__author');\n  $bookCoverPages.classList.add('book__cover__pages');\n  $bookCoverRead.classList.add('book__cover__read');\n  \n  setReadClass();\n  setReadContentValue();\n\n  $bookCoverTitle.textContent = book.title;\n  $bookCoverAuthor.textContent = book.author;\n  $bookCoverPages.textContent =  `${book.pages} pages`;\n  $bookCoverRead.textContent = setReadContentValue();\n\n\n  $bookCover.appendChild($bookCoverTitle);\n  $bookCover.appendChild($bookCoverAuthor);\n  $bookCover.appendChild($bookCoverPages);\n  $bookCover.appendChild($bookCoverRead);\n\n  $book.appendChild($bookCover);\n\n  $bookContainer.appendChild($book);\n\n\n  $book.addEventListener('click', (e)=>{\n    e.preventDefault();\n\n    const id = $book.getAttribute('id');\n\n    const bookStorageValue = myLibrary[id];\n\n    const bookOptionsModal = new BookOptionsModal();\n\n    bookOptionsModal.$bookOptionsModalButtonsReadStatus.addEventListener('click', (e)=>{\n      e.preventDefault();\n\n      if(bookStorageValue.read===true) {\n      \n        bookStorageValue.read = false;  \n        $bookCoverRead.classList.replace('read', 'not-read');\n        $bookCoverRead.textContent = 'Not Read';\n      \n      }else{\n\n        bookStorageValue.read = true;\n        $bookCoverRead.classList.replace('not-read', 'read');\n        $bookCoverRead.textContent = 'Read';\n\n      }\n\n      setStorage(myLibrary);\n\n      bookOptionsModal.$bookOptionsModal.remove();\n    })\n\n    bookOptionsModal.$bookOptionsModalButtonsDelete.addEventListener('click', (e)=>{\n      e.preventDefault();\n      myLibrary.splice(id, 1);\n      $book.remove();\n      setStorage(myLibrary);\n      bookOptionsModal.$bookOptionsModal.remove();\n    })\n\n    bookOptionsModal.$bookOptionsModalButtonsCancel.addEventListener('click', (e)=>{\n      e.preventDefault();\n      bookOptionsModal.$bookOptionsModal.remove();\n    })\n\n  })\n}\n\n\nconst createBookFromForm = (submitEvent)=>{\n\n  const id = myLibrary.length;\n  const title = submitEvent.target[0].value;\n  const author = submitEvent.target[1].value;\n  const pages = submitEvent.target[2].value;\n  const read = submitEvent.target[3].checked;\n\n  const book = new Book(id, title, author, pages, read);\n  \n  return book;\n}\n\n\n\n$form.addEventListener('submit', (e)=>{\n  e.preventDefault();\n\n  const book = createBookFromForm(e);\n  \n  addBookToLibrary(book);\n\n  createHtmlBook(book);\n  \n  $form.reset();\n})\n\nmyLibrary.map(book => createHtmlBook(book));"],"sourceRoot":""}